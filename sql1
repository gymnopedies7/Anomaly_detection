WITH TM AS
     (   SELECT  :EQP_RPR_OP_CD                   AS EQP_RPR_OP_CD,    -- 바인딩1의 LOV 있음.
                 :START_DATE||' 07:00:00'         AS START_DATE,       -- 'YYYY-MM-DD' 형식.
                 :END_DATE||' 07:00:00'           AS END_DATE,         -- 'YYYY-MM-DD' 형식.
                 :EQP_DORMANT_CD                  AS EQP_DORMANT_CD,   -- LOV값 1 계획휴지, 3 작업준비 , 4 공정장애 , 5 운전장애 , 6 설비장애
                 :CATEGORY_GROUP_NM               AS CATEGORY_GROUP_NM -- LOV값 SD9000 전체 , SD9102 주설비 , SD9108 보조설비
           FROM  DUAL)
 select EQP_RPR_OP_CD ,
        CODE_NM 공정명 ,
        EQP_DORMANT_TIME 장애시간 ,
    ROUND(EQP_DORMANT_TIME/ NVL((SELECT VAR_FORM_TP_TP
          FROM VI_M00_P20B0001
         WHERE EQP_RPR_OP_CDMIN = TO_CHAR(start_v,'YYYYMM')
           AND SUBSTR(EQNUMMIN,1,6) = EQP_RPR_OP_CD), 1),2) 지표시간,
        TO_CHAR(start_v,'YYYY-MM-DD hh24:mi') 장애시작시간 ,
        TO_CHAR(end_v,'YYYY-MM-DD hh24:mi') 장애종료시간 ,
        TRB_TYPE 장애구분 ,
        EQP_DORMANT_CD 휴지코드 ,
        DORMANT_DETAIL_CONT 장애명 ,
        EQP_TRB_CAU_CLS_TP 설비고장원인분류구분 ,
        EQP_TRB_RESP_CLS_TP 설비고장책임분류구분 ,
        EQP_TRB_PT_CLS_TP 설비고장부위분류구분 ,
        OBST_CONT 고장내용 ,
        EQP_OBST_CAU 고장원인내용 ,
        EQP_TRB_AC_CONT 고장조치내용 ,
        EQNUM 설비코드 ,
        EQP_RPR_OP_INDI_NO WO ,
        FILE_TP 장애보고서 ,
    '',
        gisul_gumto_file 기술검토서 ,
    '',
        jangae_gumto_file 생산장애검토회의결과서 ,
    '',
        jaebal_bangji_file 재발방지활동결과서 ,
    '',
        nvl(FMEA_file, 'X') FMEA문서,
    '',
        OP_DN_TP 완료여부 ,
        JAEBAL_DATE 재발활동완료예정일 ,
        JANG_ASSET 장애Asset
 from   (select CODE_NM ,
                EQP_RPR_OP_CD ,
                ROUND(DECODE(end_v, null, null, to_date(end_v, 'YYYY-MM-DD hh24:mi:ss')-to_date(start_v, 'YYYY-MM-DD hh24:mi:ss'))*24*60, 0) EQP_DORMANT_TIME ,
                to_date(start_v,'YYYY-MM-DD hh24:mi:ss') start_v,
                to_date(end_v,'YYYY-MM-DD hh24:mi:ss') end_v,
                case
                  WHEN EQP_DORMANT_CD = '1110' THEN '대수리'
                  WHEN EQP_DORMANT_CD = '1120' THEN '중수리'
                  WHEN EQP_DORMANT_CD = '1130' THEN '정기수리'
                  WHEN EQP_DORMANT_CD = '1140' THEN '소수리'
                  WHEN substr(EQP_DORMANT_CD, 0, 2) = '12' THEN '공정휴지'
                  WHEN substr(EQP_DORMANT_CD, 0, 2) = '13' THEN '교체휴지'
                  WHEN substr(EQP_DORMANT_CD, 0, 2) = '14' THEN '설비합리화'
                  WHEN substr(EQP_DORMANT_CD, 0, 2) = '19' THEN '기타휴지'
                  WHEN substr(EQP_DORMANT_CD, 0, 1) = '2' THEN '생산시간'
                  WHEN substr(EQP_DORMANT_CD, 0, 1) = '3' THEN '작업준비'
                  when substr(EQP_DORMANT_CD, 1, 1) = '4' then '공정장애'
                   when substr(EQP_DORMANT_CD, 1, 1) = '5' 
				    and EQP_OBST_TYPE is null then '운전장애'
				 when substr(EQP_DORMANT_CD, 1, 1) = '5' 
				    and    EQP_OBST_TYPE ='P' then '운전장애(생산휴지)'
				 when substr(EQP_DORMANT_CD, 1, 1) = '5' 
				    and    EQP_OBST_TYPE ='E' then '운전장애(운전휴지)'
                  when substr(EQP_DORMANT_CD, 1, 1) = '6'
                     and    EQP_OBST_TYPE is null then '설비장애(생산휴지)'
                  when substr(EQP_DORMANT_CD, 1, 1) = '6'
                     and    EQP_OBST_TYPE ='P' then '설비장애(생산휴지)'
                  when substr(EQP_DORMANT_CD, 1, 1) = '6'
                     and    EQP_OBST_TYPE ='E' then '설비장애(설비휴지)'
                end TRB_TYPE ,
                EQP_DORMANT_CD ,
                trim(DORMANT_DETAIL_CONT) DORMANT_DETAIL_CONT ,
                EQP_TRB_CAU_CLS_TP ,
                EQP_TRB_RESP_CLS_TP ,
                EQP_TRB_PT_CLS_TP ,
                OBST_CONT ,
                EQP_OBST_CAU ,
                EQP_TRB_AC_CONT ,
                EQNUM ,
                EQP_RPR_OP_INDI_NO ,
                FILE_TP ,
                gisul_gumto_man ,
                gisul_gumto_empno ,
                gisul_gumto_file ,
                jangae_gumto_man ,
                jangae_gumto_empno ,
                jangae_gumto_file ,
                jaebal_bangji_man ,
                jaebal_bangji_empno ,
                jaebal_bangji_file ,
                FMEA_man ,
                FMEA_empno ,
                FMEA_file,
                OP_DN_TP ,
                CREATED_NM,
                UPDATED_NM ,
                JAEBAL_DATE ,
                JANG_ASSET
         from   (SELECT EQP_RPR_OP_CD ,
                        MIN(start_v) start_v ,
                        decode(MAX(end_v), '2999-12-31 23:59:00', null, MAX(end_v)) end_v ,
                        EQP_DORMANT_CD ,
                        min(CODE_NM) CODE_NM ,
                        min(DORMANT_DETAIL_CONT) DORMANT_DETAIL_CONT ,
                        min(EQP_TRB_CAU_CLS_TP) EQP_TRB_CAU_CLS_TP ,
                        min(EQP_TRB_RESP_CLS_TP) EQP_TRB_RESP_CLS_TP ,
                        min(EQP_TRB_PT_CLS_TP) EQP_TRB_PT_CLS_TP ,
                        min(OBST_CONT) OBST_CONT ,
                        min(EQP_OBST_CAU) EQP_OBST_CAU ,
                        min(EQP_TRB_AC_CONT) EQP_TRB_AC_CONT ,
                        min(EQNUM) EQNUM ,
                        min(EQP_OBST_TYPE) EQP_OBST_TYPE ,
                        min(EQP_RPR_OP_INDI_NO) EQP_RPR_OP_INDI_NO ,
                        min(FILE_TP) FILE_TP ,
                        min(gisul_gumto_man) gisul_gumto_man ,
                        min(gisul_gumto_empno) gisul_gumto_empno ,
                        min(gisul_gumto_file) gisul_gumto_file ,
                        min(jangae_gumto_man) jangae_gumto_man ,
                        min(jangae_gumto_empno) jangae_gumto_empno ,
                        min(jangae_gumto_file) jangae_gumto_file ,
                        min(jaebal_bangji_man) jaebal_bangji_man ,
                        min(jaebal_bangji_empno) jaebal_bangji_empno ,
                        min(jaebal_bangji_file) jaebal_bangji_file ,
                        min(FMEA_man) FMEA_man,
                        min(FMEA_empno) FMEA_empno,
                        min(FMEA_file) FMEA_file,
                        min(OP_DN_TP) OP_DN_TP ,
                        min(CREATED_NM) CREATED_NM ,
                        min(UPDATED_NM) UPDATED_NM ,
                        min(JAEBAL_DATE) JAEBAL_DATE ,
                        min(JANG_ASSET) JANG_ASSET
                 FROM   (SELECT EQP_RPR_OP_CD ,
                                start_v ,
                                decode(end_v, null, '2999-12-31 23:59:00', end_v) end_v ,
                                EQP_DORMANT_CD ,
                                SUM(flag) OVER(PARTITION BY EQP_RPR_OP_CD, EQP_DORMANT_CD ORDER BY start_v) grp ,
                                CODE_NM ,
                                DORMANT_DETAIL_CONT ,
                                EQP_TRB_CAU_CLS_TP ,
                                EQP_TRB_RESP_CLS_TP ,
                                EQP_TRB_PT_CLS_TP ,
                                OBST_CONT ,
                                EQP_OBST_CAU ,
                                EQP_TRB_AC_CONT ,
                                EQNUM ,
                                EQP_OBST_TYPE ,
                                EQP_RPR_OP_INDI_NO ,
                                FILE_TP ,
                                gisul_gumto_man ,
                                gisul_gumto_empno ,
                                gisul_gumto_file ,
                                jangae_gumto_man ,
                                jangae_gumto_empno ,
                                jangae_gumto_file ,
                                jaebal_bangji_man ,
                                jaebal_bangji_empno ,
                                jaebal_bangji_file ,
                                FMEA_man ,
                                FMEA_empno ,
                                FMEA_file,
                                OP_DN_TP ,
                                CREATED_NM,
                                UPDATED_NM ,
                                JAEBAL_DATE ,
                                JANG_ASSET
                         FROM   (SELECT DECODE(start_v, Lag(end_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY end_v), 
                                                Lag(start_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY start_v), null) b_start_v ,
                                        DECODE(start_v, Lag(end_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY end_v), 
                                                Lag(end_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY end_v), null) b_end_v ,
                                        EQP_RPR_OP_CD ,
                                        EQP_DORMANT_CD ,
                                        start_v ,
                                        end_v ,
                                        DECODE(end_v, Lead(start_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY start_v), 
                                                Lead(start_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY start_v), null) a_start_v ,
                                        DECODE(end_v, Lead(start_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY start_v), 
                                                Lead(end_v) over(partition by EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY end_v), null) a_end_v ,
                                        DECODE(start_v, LAG(end_v) OVER(PARTITION BY EQP_RPR_OP_CD, EQP_DORMANT_CD,EQP_OBST_TYPE ORDER BY start_v), 0, 1) flag ,
                                        CODE_NM ,
                                        DORMANT_DETAIL_CONT ,
                                        EQP_TRB_CAU_CLS_NM EQP_TRB_CAU_CLS_TP ,
                                        EQP_TRB_RESP_CLS_NM EQP_TRB_RESP_CLS_TP ,
                                        EQP_TRB_PT_CLS_NM EQP_TRB_PT_CLS_TP ,
                                        OBST_CONT ,
                                        EQP_OBST_CAU ,
                                        EQP_TRB_AC_CONT ,
                                        EQNUM ,
                                        EQP_OBST_TYPE ,
                                        EQP_RPR_OP_INDI_NO ,
                                        FILE_TP ,
                                        gisul_gumto_man ,
                                        gisul_gumto_empno ,
                                        gisul_gumto_file ,
                                        jangae_gumto_man ,
                                        jangae_gumto_empno ,
                                        jangae_gumto_file ,
                                        jaebal_bangji_man ,
                                        jaebal_bangji_empno ,
                                        jaebal_bangji_file ,
                                        FMEA_man ,
                                        FMEA_empno ,
                                        FMEA_file,
                                        OP_DN_TP ,
                                        CREATED_NM,
                                        UPDATED_NM ,
                                        JAEBAL_DATE ,
                                        JANG_ASSET
                                 FROM   (select a.* ,
                                                CAU.CD_V_MEANING EQP_TRB_CAU_CLS_NM ,
                                                RESP.CD_V_MEANING EQP_TRB_RESP_CLS_NM ,
                                                PT.CD_V_MEANING EQP_TRB_PT_CLS_NM
                                         from   (select a.EQP_RPR_OP_CD ,
                                                        TO_CHAR(a.EQUIPMENT_DORMANT_START_DT, 'YYYY-MM-DD HH24:MI:SS') start_v ,
                                                        TO_CHAR(a.EQUIPMENT_DORMANT_END_DT, 'YYYY-MM-DD HH24:MI:SS') end_v ,
                                                        a.EQP_DORMANT_CD ,
                                                        min(b.CD_V_MEANING) CODE_NM ,
                                                        min(a.DORMANT_DETAIL_CONT) DORMANT_DETAIL_CONT ,
                                                        min(a.EQP_TRB_CAU_CLS_TP) EQP_TRB_CAU_CLS_TP ,
                                                        min(a.EQP_TRB_RESP_CLS_TP) EQP_TRB_RESP_CLS_TP ,
                                                        min(a.EQP_TRB_PT_CLS_TP) EQP_TRB_PT_CLS_TP ,
                                                        min(a.OBST_CONT) OBST_CONT ,
                                                        min(a.EQP_OBST_CAU) EQP_OBST_CAU ,
                                                        min(a.EQP_TRB_AC_CONT) EQP_TRB_AC_CONT ,
                                                        min(a.EQNUM) EQNUM ,
                                                        min(decode(substr(a.EQP_DORMANT_CD, 1, 1), '6', a.CC_CODE,'5',a.CC_CODE, null)) EQP_OBST_TYPE ,
                                                        min(a.EQP_RPR_OP_INDI_NO) EQP_RPR_OP_INDI_NO ,
                                                        min(case when TRB_FILE.object_id = 'A'
                                                                     and    url is not null then 'Y 파일명:' ||url
                                                                end) FILE_TP ,
                                                        min(decode(TRB_FILE.object_id, 'B', SEC_USER.USER_NAME)) gisul_gumto_man ,
                                                        min(decode(TRB_FILE.object_id, 'B', TRB_FILE.CREATED_EMPLOYEE_NUM)) gisul_gumto_empno ,
                                                        min(case when TRB_FILE.object_id = 'B'
                                                                     and    url is not null then 'Y 파일명:' ||url
                                                                 when TRB_FILE.object_id = 'B'
                                                                     and    url is null
                                                                     and    TRB_FILE.DOC_REG_STATUS is null then 'N'
                                                                 when TRB_FILE.object_id = 'B'
                                                                     and    TRB_FILE.DOC_REG_STATUS ='D' then 'X'
                                                           end) gisul_gumto_file ,
                                                        min(decode(TRB_FILE.object_id, 'C', SEC_USER.USER_NAME)) jangae_gumto_man ,
                                                        min(decode(TRB_FILE.object_id, 'C', TRB_FILE.CREATED_EMPLOYEE_NUM)) jangae_gumto_empno ,
                                                        min(case when TRB_FILE.object_id = 'C'
                                                                     and    url is not null then 'Y 파일명:' ||url
                                                                  when TRB_FILE.object_id = 'C'
                                                                     and    url is null
                                                                     and    TRB_FILE.DOC_REG_STATUS is null then 'N'
                                                                  when TRB_FILE.object_id = 'C'
                                                                     and    TRB_FILE.DOC_REG_STATUS ='D' then 'X'
                                                                end) jangae_gumto_file ,
                                                        min(decode(TRB_FILE.object_id, 'D', SEC_USER.USER_NAME)) jaebal_bangji_man ,
                                                        min(decode(TRB_FILE.object_id, 'D', TRB_FILE.CREATED_EMPLOYEE_NUM)) jaebal_bangji_empno ,
                                                        min(case when TRB_FILE.object_id = 'D'
                                                                     and    url is not null then 'Y 파일명:' ||url
                                                                  when TRB_FILE.object_id = 'D'
                                                                     and    url is null
                                                                     and    TRB_FILE.DOC_REG_STATUS is null then 'N'
                                                                  when TRB_FILE.object_id = 'D'
                                                                     and    TRB_FILE.DOC_REG_STATUS ='D' then 'X'
                                                                end) jaebal_bangji_file ,
                                                        min(decode(TRB_FILE.object_id, 'E', SEC_USER.USER_NAME)) FMEA_man ,
                                                        min(decode(TRB_FILE.object_id, 'E', TRB_FILE.CREATED_EMPLOYEE_NUM)) FMEA_empno ,
                                                        min(case when TRB_FILE.object_id = 'E'
                                                                     and    url is not null then 'Y 파일명:' ||url
                                                                  when TRB_FILE.object_id = 'E'
                                                                     and    url is null
                                                                     and    TRB_FILE.DOC_REG_STATUS is null then 'N'
                                                                  when TRB_FILE.object_id = 'E'
                                                                     and    TRB_FILE.DOC_REG_STATUS ='D' then 'X'
                                                                end) FMEA_file ,
                                                        min(a.OP_DN_TP) OP_DN_TP ,
                                                        min(DECODE(EQNUM1, null, null, EQNUM1||'('||DESCRIPTION||')')) CREATED_NM ,
                                                        min(DECODE(EMPLOYEE_NAME, null, null, EMPLOYEE_NAME||'('||PHONE_NUMBER||')')) UPDATED_NM ,
                                                        min(decode(TRB_FILE.object_id, 'D', TRB_FILE.CREATE_DATE)) JAEBAL_DATE ,
                                                        min(decode(TRB_FILE.object_id, 'A', TRB_FILE.DOC_TITLE)) JANG_ASSET
                                                 from   TB_P20_EQP_DMT_DATA a,
                                                        VI_M00_CODE_ACCESS b ,
                                                        TB_P20_EQP_TRB_FILE TRB_FILE ,
                                                        VI_M00_SEC_USER SEC_USER ,
                                                        TM
                                                 where  a.EQP_RPR_OP_CD like decode(TM.EQP_RPR_OP_CD, '전체', '', TM.EQP_RPR_OP_CD)||'%'
                                                 and    ((a.EQUIPMENT_DORMANT_START_DT < to_date(TM.START_DATE, 'YYYY/MM/DD HH24:MI:SS')
                                                                 and    a.EQUIPMENT_DORMANT_END_DT >= to_date(TM.START_DATE, 'YYYY/MM/DD HH24:MI:SS'))
                                                         or     (a.EQUIPMENT_DORMANT_START_DT >= to_date(TM.START_DATE, 'YYYY/MM/DD HH24:MI:SS')
                                                                 and    a.EQUIPMENT_DORMANT_START_DT < to_date(TM.END_DATE, 'YYYY/MM/DD HH24:MI:SS'))
                                                         or     (a.EQUIPMENT_DORMANT_START_DT < to_date(TM.END_DATE, 'YYYY/MM/DD HH24:MI:SS')
                                                                 and    a.EQUIPMENT_DORMANT_END_DT is null) )
                                                 and    a.EQP_DORMANT_CD like TM.EQP_DORMANT_CD||'%'
                                                 and    a.CREATED_OBJECT_ID not in ('KUC99002',
                                                                'PUC99002')
                                         --        AND    b.LANGUAGE_CODE = 'KO'
                                                 AND    b.CD_TP = 'EQP_RPR_OP_CD'
                                                 AND    b.CATEGORY_CD_TP = 'EQP_RPR_OP_CD'
                                                 AND    b.CATEGORY_GROUP_NM = TM.CATEGORY_GROUP_NM
                                                 and    a.EQP_RPR_OP_CD = b.CD_V
                                                 and    a.EQP_RPR_OP_CD = TRB_FILE.EQP_RPR_OP_CD(+)
                                                 and    a.EQP_TRB_NO = TRB_FILE.EQP_TRB_NO(+)
                                                 and    TRB_FILE.CREATED_EMPLOYEE_NUM = SEC_USER.USER_EMP_NO(+)
                                                 group by a.EQP_RPR_OP_CD 
                                                        , TO_CHAR(a.EQUIPMENT_DORMANT_START_DT, 'YYYY-MM-DD HH24:MI:SS') 
                                                        , TO_CHAR(a.EQUIPMENT_DORMANT_END_DT, 'YYYY-MM-DD HH24:MI:SS') 
                                                        , a.EQP_DORMANT_CD 
                                                order by a.EQP_RPR_OP_CD
                                                         ,TO_CHAR(a.EQUIPMENT_DORMANT_START_DT,'YYYY-MM-DD HH24:MI:SS') desc
                                                 ) a,
                                                (SELECT *
                                                 FROM   VI_M00_CODE_ACCESS
                                                 WHERE  CD_TP = 'EQP_TRB_CAU_CLS_TP'
                                                 AND    CATEGORY_CD_TP = 'EQP_TRB_CAU_CLS_TP' ) CAU,
                                                (SELECT *
                                                 FROM   VI_M00_CODE_ACCESS
                                                 WHERE  CD_TP = 'EQP_TRB_RESP_CLS_TP'
                                                 AND    CATEGORY_CD_TP = 'EQP_TRB_RESP_CLS_TP' ) RESP,
                                                (SELECT *
                                                 FROM   VI_M00_CODE_ACCESS
                                                 WHERE  CD_TP = 'EQP_TRB_PT_CLS_TP'
                                                 AND    CATEGORY_CD_TP = 'EQP_TRB_PT_CLS_TP' ) PT
                                         where  a.EQP_TRB_CAU_CLS_TP = CAU.CD_V(+)
                                         AND    a.EQP_TRB_RESP_CLS_TP = RESP.CD_V(+)
                                         AND    a.EQP_TRB_PT_CLS_TP = PT.CD_V(+) )
                                 order by EQP_RPR_OP_CD
                                         , START_V ) )
                 GROUP BY EQP_RPR_OP_CD
                         , EQP_DORMANT_CD
                         , grp ) )
 --where EQP_DORMANT_TIME >= 120
 ORDER BY EQP_RPR_OP_CD
         , start_v